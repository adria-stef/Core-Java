package com.hackbulgaria.corejava.oopfun;

import static org.junit.Assert.*;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class DoublyLinkedListTestCase {

    private DoublyLinkedList doublyLinkedList = new DoublyLinkedList();
    @Before
    public void setUp() throws Exception {
        this.doublyLinkedList = new DoublyLinkedList();
    }

    @After
    public void tearDown() throws Exception {
    }

    @Test
    public void testIsEmpty() {
        DoublyLinkedList doublyLinkedList = new DoublyLinkedList();
        assertTrue(doublyLinkedList.isEmpty());
    }
    
    @Test
    public void testSize() {
        DoublyLinkedList doublyLinkedList = new DoublyLinkedList();
        assertEquals(0, doublyLinkedList.size());
        
        doublyLinkedList.addFirst(3);
        doublyLinkedList.addLast(4);
        doublyLinkedList.addLast(1);
        assertEquals(3, doublyLinkedList.size());
        
        doublyLinkedList.removeFirst();
        assertEquals(2, doublyLinkedList.size());

        doublyLinkedList.removeLast();
        assertEquals(2, doublyLinkedList.size());
        
        
    }
    
//    @Test
//    public void testGet() {
//        DoublyLinkedList doublyLinkedList = new DoublyLinkedList();
//        assertEquals(0, doublyLinkedList.size());
//        
//        doublyLinkedList.addFirst(3);
//        doublyLinkedList.addLast(4);
//        assertEquals(3, doublyLinkedList.getFirst());
//        assertEquals(4, doublyLinkedList.getLast());
//        
//    }
    
    
    @Test
    public void testRemove() {
        DoublyLinkedList doublyLinkedList = new DoublyLinkedList();
        assertEquals(0, doublyLinkedList.size());
        
        doublyLinkedList.addFirst(3);
        doublyLinkedList.addLast(4);
        doublyLinkedList.removeFirst();
        assertEquals(1, doublyLinkedList.size());
//        assertEquals(4, doublyLinkedList.firstNode);
    }


}
