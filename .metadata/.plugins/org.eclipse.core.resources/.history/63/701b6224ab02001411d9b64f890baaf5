package com.hackbulgaria.javacore.pairprogramming;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

public class PictureAsciiPlayer extends AsciiPlayer {

    PictureAsciiPlayer(File file) {
        super(file);
    }

    private BufferedImage createImage(File file) throws IOException {
        BufferedImage image = ImageIO.read(file);
        return image;
        }

    private Color[][] getPixels(BufferedImage image) {
        int imageHeight = image.getHeight();
        int imageWidth = image.getWidth();
        Color[][] pixels = new Color[imageWidth][imageHeight];
        for (int x = 0; x < imageWidth; x++) {
            for (int y = 0; y < imageHeight; y++) {
                int colorInt = image.getRGB(x, y);
                pixels[x][y] = new Color(colorInt, false);
                }
            }
        return pixels;
        }

    private int getIntensity(Color color) {
        int red = color.getRed();
        int green = color.getGreen();
        int blue = color.getBlue();

        return (red + green + blue) / 3;
    }

    private char getChar(int intensity) {
        char result = ' ';

        if (intensity > 240) {
            result = ' ';
        } else if (intensity > 200) {
            result = '.';
        } else if (intensity > 160) {
            result = '*';
        } else if (intensity > 120) {
            result = '+';
        } else if (intensity > 80) {
            result = '=';
        } else if (intensity > 40) {
            result = 'x';
        } else if (intensity > 0) {
            result = '#';
            }
        return result;
        }

    private char[][] renderImage(Color[][] pixels) {
        char[][] result = new char[pixels.length][pixels[0].length];
        for (int i = 0; i < result.length; i++) {
            for (int j = 0; j < result[0].length; j++) {
                int intensity = getIntensity(pixels[i][j]);
                result[i][j] = getChar(intensity);
            }
        }
        return result;
        }

    public char[][] renderSmallImage(Color[][] pixels) {

    }

    private void printRenderedImage(char[][] rendered) {
        for (int y = 0; y < rendered[0].length; y++) {
            for (int x = 0; x < rendered.length; x++) {
                System.out.print(rendered[x][y]);
            }
            System.out.println();
            }
        }

    @Override
    public void play(File file) throws IOException {
        BufferedImage image = createImage(file);
        Color[][] pixels = getPixels(image);
        char[][] result = renderImage(pixels);
        printRenderedImage(result);
        }

    }
