package com.hackbulgaria.javacore.exam1;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Stack;

public class Utils {

    public static void sort(List<Integer> unsortedList) {
        List<Integer> sortedList = new ArrayList<>(unsortedList);

        boolean ifSwapped = true;
        while (ifSwapped) {
            ifSwapped = false;
            for (int i = 0; i < unsortedList.size() - 1; i++) {
                if (unsortedList.get(i) < unsortedList.get(i + 1)) {
                    sortedList.set(i, unsortedList.get(i + 1));
                    sortedList.set(i + 1, unsortedList.get(i));
                    ifSwapped = true;
                }
            }

        }

    }

//    public static List<Integer> reverse(List<Integer> orderedList) {
//
//        List<Integer> reversedList = new ArrayList<>(orderedList);
//
//        Stack<Integer> stackOfInteger = new Stack<>();
//
//        for (Integer item : reversedList) {
//            stackOfInteger.push(item);
//        }
//
//        reversedList.clear();
//        
//        while (!stackOfInteger.isEmpty()) {
//            reversedList.add(stackOfInteger.pop());
//        }
//        
//        return reversedList;
//    }
    
    public static List<Integer> reverse(List<Integer> argument) {
        
        List<Integer> reversedList = new ArrayList<Integer>();
        
        Stack<Integer> stackOfInteger = new Stack<>();

        for (Integer item : argument) {
            stackOfInteger.push(item);
        }

        reversedList.clear();

        while(!stackOfInteger.isEmpty()) {
            reversedList.add(stackOfInteger.pop());
        }
        return reversedList;
    }

}
