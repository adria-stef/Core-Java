package com.hackbulgaria.javacore.files1;

import java.io.File;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.ArrayList;
import java.util.List;

public class FileUtils {

    private FileUtils() {
        super();
    }

    public static String readFrom(File file) throws IOException {

        Path path = file.toPath();
        String string = new String(readFrom(path));
        return string;
    }

    public static String readFrom(Path path) throws IOException {

        byte[] byteArray = Files.readAllBytes(path);
        String string = new String(byteArray, Charset.defaultCharset());
        System.out.println(string);
        return string;
    }

    public static void writeTo(Path path, String string) throws IOException {
        byte[] byteArray = string.getBytes();
        Files.write(path, byteArray, StandardOpenOption.TRUNCATE_EXISTING);
    }

    // ask joro!
    public static void fixEncoding(Path path) throws IOException {
        byte[] byteArray = Files.readAllBytes(path);
        String fixed = new String(byteArray, StandardCharsets.UTF_8);
        byte[] newByteArray = fixed.getBytes();
        Files.write(path, newByteArray, StandardOpenOption.TRUNCATE_EXISTING);
    }

    public static void greetMe(Day day) {
        switch (day) {
            case MONDAY:
                System.out.println("Holla. It's Monday.");
                break;
            case TUESDAY:
                System.out.println("Alloha. It's Tuesday");
                break;
            case WEDNESDAY:
                System.out.println("Bonjour. It's Wednesday.");
                break;
            case THURSDAY:
                System.out.println("Salut. It's Thursday.");
                break;
            case FRIDAY:
                System.out.println("Hello. It's Friday.");
                break;
            case SATURDAY:
                System.out.println("Hi. It's Saturday.");
                break;
            case SUNDAY:
                System.out.println("Bye. It's Sunday.");
                break;
        }
    }

    // ask joro about ..
    public static Path reduceFilePathInOneLine(Path path) {
        return path.normalize();
    }

    // ask how to check?
    public static boolean isLinkBroken(Path path) {

        boolean flag = false;
        int count = 0;
        File[] files = path.toFile().listFiles();
        List<File> directories = new ArrayList<File>(files.length);
        for (File file : files) {
            if (file.isDirectory()) {
                directories.add(file);
            } else if (Files.isSymbolicLink(Paths.get(path.toString() + "\\" + file.toString()))) {
                if (Files.notExists(Paths.get(path.toString() + "\\" + file.toString()))) {
                    count++;
                    System.out.println(count + "Bad Link(s)");
                    flag = true;
                } else {
                    continue;
                }
            }
        }

        for (File directory : directories) {
            isLinkBroken(Paths.get(path.toString() + "\\" + directory.toString()));
        }
        return flag;
    }

    public static Path compress(Path filePath) {
       String content = readFrom(filePath);

        Path path = Paths.get(filePath.toString() + ".compressed");
        return path;
    }

    public static void main(String[] args) throws IOException {
        final Path filepath = Paths.get("E:\\Adii\\Documents\\CoreJava\\resources\\lost.s04e11.hdtv.xvid-2hd.srt");
        fixEncoding(filepath);

        greetMe(Day.MONDAY);

        Path path = Paths.get("E:\\Adii\\Documents\\..\\CoreJava");
        reduceFilePathInOneLine(path);
        System.out.println(path);
    }
}
